// COST.h
#ifndef COST_H
#define COST_H

class COST {
private:
    int totalCoins;
    int productPrice;

public:
    COST(int price);
    void insertCoin(int coin);
    void purchaseProduct();
    int getSpread() const;
    int returnAmount();
};

#endif

// COST.cpp
#include "COST.h"
#include <iostream>

COST::COST(int price) {
    totalCoins = 0;
    productPrice = price;
}

void COST::insertCoin(int coin) {
    totalCoins += coin;
}

void COST::purchaseProduct() {
    if (totalCoins >= productPrice) {
        int change = totalCoins - productPrice;
        std::cout << "購買成功！" << std::endl;
        if (change > 0) {
            std::cout << "找零：" << change << "元" << std::endl;
        }
        totalCoins = 0;
    } else {
        std::cout << "投入金額不足，請投入更多硬幣" << std::endl;
    }
}

int COST::getSpread() const {
    return totalCoins - productPrice;
}

int COST::returnAmount() {
    int change = totalCoins;
    totalCoins = 0;
    return change;
}

// main.cpp
#include "COST.h"
#include <iostream>

int main() {
    int productPrice;
    std::cout << "請輸入商品價格：";
    std::cin >> productPrice;

    COST COST(productPrice);

    int coin;
    while (true) {
        std::cout << "請投入硬幣（輸入0結束投幣）：";
        std::cin >> coin;
        if (coin == 0) {
            break;
        }
        COST.insertCoin(coin);
    }

    COST.purchaseProduct();
    int spread = COST.getSpread();
    int returnedAmount = COST.returnAmount();

    std::cout << "找零金額：" << spread << "元" << std::endl;
    std::cout << "退還金額：" << returnedAmount << "元" << std::endl;

    return 0;
}
